[
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "title": "Take Home Exercise 04",
    "section": "",
    "text": "This Take-Home Exercise seeks to uncover the impact of COVID-19 as well as the global economic and political dynamic in 2022 on Singapore’s bi-lateral trade (i.e. Import, Export and Trade Balance) by using appropriate analytical visualisation techniques learned in Lesson 6: It’s About Time.\nThe dataset selected for this exercise is sourced from Singstat.gov.sg and contains data on the Merchandise Imports and Exports by Region / Market.\nFor the purpose of this exercise, the study period will be conducted from January 2020 to December 2022."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#treemap-animation-by-countries",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#treemap-animation-by-countries",
    "title": "Take Home Exercise 04",
    "section": "TREEMAP ANIMATION: BY COUNTRIES",
    "text": "TREEMAP ANIMATION: BY COUNTRIES\n\nSelection & Design Consideration\n\n\nReproducible Procedures\nThe code chunk below contains the codes required to reproduce this visualization, along with the corresponding annotations which describes the procedures used.\n\n#<< PREPARING DATASET IN LONG FORMAT\ncountry_import_long <- import %>%\n  select(-2, -3, -4, -5, -6, -7, -8) %>%\n  pivot_longer(                                                             #<< pivot longer to convert columns to rows with values as new numeric values column\n     cols = -c('date'), \n     names_to = \"country\",\n     values_transform = as.numeric,\n     values_to = \"import_value\") %>%\n  mutate(val_mil = round(import_value/1000000,1),                           #<< rounding values to millions for easy viewability\n         val_mil = \n           format(round(as.numeric(val_mil), 1), nsmall=1, big.mark=\",\")    #<< formatting to add thousands separator\n         ) %>%\n  unite(\"labels\", country,val_mil, sep = \"\\n\", remove = FALSE)              #<< create treemap labels\n\n#<< PLOTTING IMPORT TREEMAP\np1 <- country_import_long %>%\n  filter(import_value > 0) %>%                                              #<< remove country lines where import value = 0\n  ggplot(aes(area = import_value, fill = import_value, label = labels)) +   #<< ggplot function - set area / fill / labels\n  theme(legend.position = \"none\",                                     \n        plot.title = element_text(size = 25, face = \"bold\"),\n        plot.caption = element_text(size = 15)) +\n  geom_treemap() +                                                          #<< plot treemap - default squarify layout\n  geom_treemap_text(place = \"centre\", grow = TRUE, colour = \"white\") +      #<< label text to grow and fill square size\n  transition_time(date) +                                                   #<< transition based on time attribute\n  ease_aes('linear') +                                                      #<< linear progression\n  labs(title = \"SG Bilateral Trade Imports - Period: {frame_time}\",         #<< setting of Plot Title and Caption\n       caption = \"The area of each tile represents the value of SG's imports (in millions) by Country\")\n\n#<< save animation as gif file, set number of frames and plot size\nanim_save(\"animated_treemap_import.gif\", p1, nframes = 216, width = 600, height = 600)\n\n#<< PREPARING DATASET IN LONG FORMAT\ncountry_export_long <- export %>%\n  select(-2, -3, -4, -5, -6, -7, -8) %>%\n  pivot_longer(                                                             #<< pivot longer to convert columns to rows with values as new numeric values column\n     cols = -c('date'), \n     names_to = \"country\",\n     values_transform = as.numeric,\n     values_to = \"export_value\") %>%\n  mutate(val_mil = round(export_value/1000000,1),                           #<< rounding values to millions for easy viewability\n         val_mil = \n           format(round(as.numeric(val_mil), 1), nsmall=1, big.mark=\",\")    #<< formatting to add thousands separator\n         ) %>%\n  unite(\"labels\", country,val_mil, sep = \"\\n\", remove = FALSE)              #<< create treemap labels\n\n#<< PLOTTING IMPORT TREEMAP\np2 <- country_export_long %>%\n  filter(export_value > 0) %>%                                              #<< remove country lines where import value = 0\n  ggplot(aes(area = export_value, fill = export_value, label = labels)) +   #<< ggplot function - set area / fill / labels\n  theme(legend.position = \"none\", \n        plot.title = element_text(size = 25, face = \"bold\"),\n        plot.caption = element_text(size = 15)) +\n  geom_treemap() +                                                          #<< plot treemap - default squarify layout\n  geom_treemap_text(place = \"centre\", grow = TRUE, colour = \"white\") +      #<< label text to grow and fill square size\n  transition_time(date) +                                                   #<< transition based on time attribute\n  ease_aes('linear') +                                                      #<< linear progression\n  labs(title = \"SG Bilateral Trade Exports - Period: {frame_time}\",         #<< setting of Plot Title and Caption\n       caption = \"The area of each tile represents the value of SG's imports (in millions) by Country\")\n\n#<< save animation as gif file, set number of frames and plot size\nanim_save(\"animated_treemap_export.gif\", p2, nframes = 216, width = 600, height = 600)\n\n\n\n\n\n\n\nSG Trade Imports: Jan 2020 - Dec 2022\n\n\n\n\n\n\n\nSG Trade Exports: Jan 2020 - Dec 2022\n\n\n\n\n\n\n\nPatterns Revealed by Visualisation"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#stacked-bar-chart-top-6-trading-partners",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#stacked-bar-chart-top-6-trading-partners",
    "title": "Take Home Exercise 04",
    "section": "STACKED BAR CHART: TOP 6 TRADING PARTNERS",
    "text": "STACKED BAR CHART: TOP 6 TRADING PARTNERS\n\nSelection & Design Consideration\n\n\nReproducible Procedures\nThe code chunk below contains the codes required to reproduce this visualization, along with the corresponding annotations which describes the procedures used.\n\n#<< PREPARING DATASET IN LONG FORMAT\ncountry_import_long_1 <- import %>%\n  select(-2, -3, -4, -5, -6, -7, -8) %>%                                    #<< remove uninterested columns (total, regional)\n  pivot_longer(                                                             #<< pivot longer to convert columns to rows with values as new numeric values column\n     cols = -c('date'), \n     names_to = \"country\",\n     values_transform = as.numeric,\n     values_to = \"import\")\n\ncountry_export_long_1 <- export %>%\n  select(-2, -3, -4, -5, -6, -7, -8) %>%                                    #<< remove uninterested columns (total, regional)\n  pivot_longer(                                                             #<< pivot longer to convert columns to rows with values as new numeric values column\n     cols = -c('date'), \n     names_to = \"country\",\n     values_transform = as.numeric,\n     values_to = \"export\")\n\ncountry_long_1 <- inner_join(country_export_long_1,                         #<< combining import and export dataset\n                             country_import_long_1) %>%             \n  pivot_longer(                                                             #<< pivot longer to convert columns to rows with values as new numeric values column\n     cols = c('export', 'import'), \n     names_to = \"Merc_Trade\",\n     values_transform = as.numeric,\n     values_to = \"TradeValue\") %>%\n  mutate(TradeValue_bil = round(TradeValue/1000000000,1))                   #<< rounding value to billions\n\n\ntop5countries <- country_long_1 %>%                                         #<< Derive Top 5 trading partner countries during period\n  select(country, TradeValue) %>%                                           \n  group_by(country)  %>%                                                    #<< Group by countries , sum import / export\n  summarise(sum_TV=sum(TradeValue),\n            .groups = 'drop') %>%\n  arrange(desc(sum_TV)) %>%                                                 #<< Sort countries by trade value in descending order\n  slice(0:15)                                                                #<< select top 5 countries\n\n#<< Inner join back to main dataset to get full data only for the Top 5 countries\ncountry_long_1_top5 <- inner_join(country_long_1, \n                              top5countries) %>%\n  mutate(year = year(date)) %>%\n  select(year, country, Merc_Trade, TradeValue, TradeValue_bil) %>%               \n  group_by(year, country, Merc_Trade)  %>%                                  #<< derive trade values grouped by year, country and trade type\n  summarise(sum_TV=sum(TradeValue),\n            sum_TV_bil=sum(TradeValue_bil),\n            .groups = 'drop') %>%\n  arrange(year, desc(sum_TV))\n\ncountry_long_1_top5$tooltip <- c(paste0(                                    #<< Creating annotations for tooltip\n  \"Country = \", country_long_1_top5$country,\n  \"\\n Trade Type = \", country_long_1_top5$Merc_Trade,\n  \"\\n Trade Value (bn) = $\", country_long_1_top5$sum_TV_bil))\n\np <- ggplot(country_long_1_top5, \n            aes(fill=Merc_Trade, y=sum_TV/1000000000, x = country, label = sum_TV_bil)) +\n  hrbrthemes::theme_ipsum(grid=\"Y\") +\n  geom_bar_interactive(aes(tooltip = tooltip), position=\"stack\", stat=\"identity\") +\n  geom_text(position = position_stack(vjust = 0.5), size = 2, color = \"#ffffff\") +\n  theme(legend.position=\"bottom\") +\n  guides(fill=guide_legend(title=\"Merchandise Trade Type\")) +\n  ggtitle(\"Singapore Merchandise Trade with Major Partners\") +\n  ylab(\"Trade Value (in Billions)\") +\n  xlab(\"Trade Partner (by Country))\") +\n  #scale_x_discrete(guide = guide_axis(n.dodge=3)) +\n  theme(\n    axis.title = element_text(size=8), \n    axis.text.x = element_text(size=8, angle=45, hjust = 0.75), \n    legend.title = element_text(size=8), #change legend title font size\n    legend.text = element_text(size=8), \n    legend.key.size = unit(0.3, 'cm')\n  ) + \n  facet_wrap(~ year, nrow=3) ##increasing countries to 15 instead? \n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                        \n  height_svg = 6*0.618                    \n)                                       \n\n\n\n\n\n\n\nPatterns Revealed by Visualisation"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#top-6-trading-partners-cycle-plot",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#top-6-trading-partners-cycle-plot",
    "title": "Take Home Exercise 04",
    "section": "TOP 6 TRADING PARTNERS CYCLE PLOT",
    "text": "TOP 6 TRADING PARTNERS CYCLE PLOT\n\nSelection & Design Consideration\n\n\nReproducible Procedures\nThe code chunk below contains the codes required to reproduce this visualization, along with the corresponding annotations which describes the procedures used.\n\n#<< install development version from github\n#install.packages(\"remotes\")\n#remotes::install_github(\"nsgrantham/ggbraid\")\n\n#<< use dataframe from previous plot to create a wide data format\ncountry_long_1_top5_wide <- inner_join(country_long_1, \n                              top5countries) %>%\n   select(date, country, Merc_Trade, TradeValue_bil) %>%\n   pivot_wider(names_from = Merc_Trade,\n             values_from = TradeValue_bil)\n\n#<< create long dataset for top 5 countries\ncountry_long_1_top5_long <- inner_join(country_long_1, \n                              top5countries)\n\nggplot() +\n  geom_line(aes(date, TradeValue_bil, linetype = Merc_Trade), data = country_long_1_top5_long, size=1) +\n  ggbraid::geom_braid(aes(x = date,\n                  ymin = import,\n                  ymax = export,\n                  fill = import < export), \n                  data = country_long_1_top5_wide,\n              alpha = 0.6\n              ) +\n  guides(linetype = \"none\", fill = \"none\") +\n  hrbrthemes::theme_ipsum(grid=\"Y\") +\n  facet_wrap(~country, ncol = 5) +\n    labs(title = \"Monthly Export & Import Trade Values \\nTop 6 Trading Partners (Jan20-Dec22)\",\n         caption = \"Note: The shaded green area represents Export value > Import value, indicating a trade surplus. \\n The shaded red area represents Export value < Import value, indicating a trade deficit.\") +\n  ylab(\"Trade Value (in Billions)\") +\n  xlab(\"Time period\") +\n  theme(\n    axis.title = element_text(size=8), \n    axis.text.x = element_text(size=6, angle=45, hjust = 1)\n  )\n\n\n\n\n\n\nPatterns Revealed by Visualisation\nTOP 15Countries\n\ntop5countries <- country_long_1 %>%                                         #<< Derive Top 5 trading partner countries during period\n  select(country, TradeValue) %>%                                           \n  group_by(country)  %>%                                                    #<< Group by countries , sum import / export\n  summarise(sum_TV=sum(TradeValue),\n            .groups = 'drop') %>%\n  arrange(desc(sum_TV)) %>%                                                 #<< Sort countries by trade value in descending order\n  slice(0:15)   \n\n#<< use dataframe from previous plot to create a wide data format\ncountry_long_1_top5_wide <- inner_join(country_long_1, \n                              top5countries) %>%\n   select(date, country, Merc_Trade, TradeValue_bil) %>%\n   pivot_wider(names_from = Merc_Trade,\n             values_from = TradeValue_bil)\n\n#<< create long dataset for top 5 countries\ncountry_long_1_top5_long <- inner_join(country_long_1, \n                              top5countries)\n\nggplot() +\n  geom_line(aes(date, TradeValue_bil, linetype = Merc_Trade), data = country_long_1_top5_long, size=1) +\n  ggbraid::geom_braid(aes(x = date,\n                  ymin = import,\n                  ymax = export,\n                  fill = import < export), \n                  data = country_long_1_top5_wide,\n              alpha = 0.6\n              ) +\n  guides(linetype = \"none\", fill = \"none\") +\n  hrbrthemes::theme_ipsum(grid=\"Y\") +\n  facet_wrap(~country, ncol = 5) +\n    labs(title = \"Monthly Export & Import Trade Values \\nTop 6 Trading Partners (Jan20-Dec22)\",\n         caption = \"Note: The shaded green area represents Export value > Import value, indicating a trade surplus. \\n The shaded red area represents Export value < Import value, indicating a trade deficit.\") +\n  ylab(\"Trade Value (in Billions)\") +\n  xlab(\"Time period\") +\n  theme(\n    axis.title = element_text(size=8), \n    axis.text.x = element_text(size=6, angle=45, hjust = 1)\n  )"
  }
]